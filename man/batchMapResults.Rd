% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batchMapResults.R
\name{batchMapResults}
\alias{batchMapResults}
\title{Map Over Results to Create New Jobs}
\usage{
batchMapResults(fun, ids = NULL, ..., missing.val, more.args = list(),
  target, source = getDefaultRegistry())
}
\arguments{
\item{fun}{[\code{function}]\cr
Function which takes the result as first (unnamed) argument.}

\item{ids}{[\code{\link[base]{data.frame}} or \code{integer}]\cr
A \code{\link[base]{data.frame}} (or \code{\link[data.table]{data.table}})
with a column named \dQuote{job.id}.
Alternatively, you may also pass a vector of integerish job ids.
If not set, defaults to the return value of \code{\link{findDone}}.}

\item{...}{[any]\cr
Arguments to vectorize over (list or vector). Passed to \code{\link{batchMap}}<`3`>.}

\item{missing.val}{[\code{ANY}]\cr
Value to return if the result file is missing (if not provided and a result file is not found, an exception is raised).}

\item{more.args}{[\code{list}]\cr
A list of further arguments passed to \code{fun}.
Default is an empty list.}

\item{target}{[\code{\link{Registry}}]\cr
Empty Registry where new jobs are created for.}

\item{source}{[\code{\link{Registry}}]\cr
Registry. If not explicitly passed, uses the default registry (see \code{\link{setDefaultRegistry}}).}
}
\value{
[\code{\link{data.table}}] with ids of jobs added to \code{target}.
}
\description{
This function allows you to create new computational jobs (just like \code{\link{batchMap}} based on the results of
a \code{\link{Registry}}.
}
\examples{
# source registry: calculate squre of some numbers
tmp = makeRegistry(file.dir = NA, make.default = FALSE)
batchMap(function(x) list(square = x^2), x = 1:10, reg = tmp)
submitJobs(reg = tmp)
waitForJobs(reg = tmp)

# target registry: map results of first registry and calculate the square root
target = makeRegistry(file.dir = NA, make.default = FALSE)
batchMapResults(fun = function(x, y) list(sqrt = sqrt(x$square)), target = target, source = tmp)
getStatus(reg = target)
submitJobs(reg = target)
waitForJobs(reg = target)

rjoin(reduceResultsDataTable(reg = tmp), reduceResultsDataTable(reg = target))
}
\seealso{
Other Results: \code{\link{loadResult}},
  \code{\link{reduceResultsList}},
  \code{\link{reduceResults}}
}

